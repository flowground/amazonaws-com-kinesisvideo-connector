{
    "openapi": "3.0.0",
    "servers": [
        {
            "url": "https://kinesisvideo.amazonaws.com/"
        },
        {
            "url": "http://kinesisvideo.amazonaws.com/"
        }
    ],
    "info": {
        "contact": {
            "email": "mike.ralphson@gmail.com",
            "name": "Mike Ralphson",
            "url": "https://github.com/mermade/aws2openapi",
            "x-twitter": "PermittedSoc"
        },
        "description": "<p/>",
        "license": {
            "name": "Apache 2.0 License",
            "url": "http://www.apache.org/licenses/"
        },
        "termsOfService": "https://aws.amazon.com/service-terms/",
        "title": "Amazon Kinesis Video Streams",
        "version": "2017-09-30",
        "x-apiClientRegistration": {
            "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
        },
        "x-apisguru-categories": [
            "cloud"
        ],
        "x-logo": {
            "backgroundColor": "#FFFFFF",
            "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.jpeg"
        },
        "x-origin": [
            {
                "contentType": "application/json",
                "converter": {
                    "url": "https://github.com/mermade/aws2openapi",
                    "version": "1.0.0"
                },
                "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/kinesisvideo-2017-09-30.normal.json",
                "x-apisguru-direct": true
            }
        ],
        "x-preferred": true,
        "x-providerName": "amazonaws.com",
        "x-release": "v4",
        "x-serviceName": "kinesisvideo"
    },
    "externalDocs": {
        "description": "Amazon Web Services documentation",
        "url": "https://aws.amazon.com/kinesisvideo/"
    },
    "security": [
        {
            "hmac": []
        }
    ],
    "paths": {
        "/createStream": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Creates a new Kinesis video stream. </p> <p>When you create a new stream, Kinesis Video Streams assigns it a version number. When you change the stream's metadata, Kinesis Video Streams updates the version. </p> <p> <code>CreateStream</code> is an asynchronous operation.</p> <p>For information about how the service works, see <a href=\"https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/how-it-works.html\">How it Works</a>. </p> <p>You must have permissions for the <code>KinesisVideo:CreateStream</code> action.</p>",
                "operationId": "CreateStream",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "StreamARN": {
                                            "description": "The Amazon Resource Name (ARN) of the stream.",
                                            "maxLength": 1024,
                                            "minLength": 1,
                                            "pattern": "arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "AccountStreamLimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "DeviceStreamLimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceInUseException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidDeviceException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ClientLimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "TagsPerResourceExceededLimitException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "DataRetentionInHours": {
                                        "description": "<p>The number of hours that you want to retain the data in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream.</p> <p>The default value is 0, indicating that the stream does not persist data.</p> <p>When the <code>DataRetentionInHours</code> value is 0, consumers can still consume the fragments that remain in the service host buffer, which has a retention time limit of 5 minutes and a retention memory limit of 200 MB. Fragments are removed from the buffer when either limit is reached.</p>",
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "DeviceName": {
                                        "description": "<p>The name of the device that is writing to the stream. </p> <note> <p>In the current implementation, Kinesis Video Streams does not use this name.</p> </note>",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9_.-]+",
                                        "type": "string"
                                    },
                                    "KmsKeyId": {
                                        "description": "<p>The ID of the AWS Key Management Service (AWS KMS) key that you want Kinesis Video Streams to use to encrypt stream data.</p> <p>If no key ID is specified, the default, Kinesis Video-managed key (<code>aws/kinesisvideo</code>) is used.</p> <p> For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters\">DescribeKey</a>. </p>",
                                        "maxLength": 2048,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "MediaType": {
                                        "description": "<p>The media type of the stream. Consumers of the stream can use this information when processing the stream. For more information about media types, see <a href=\"http://www.iana.org/assignments/media-types/media-types.xhtml\">Media Types</a>. If you choose to specify the <code>MediaType</code>, see <a href=\"https://tools.ietf.org/html/rfc6838#section-4.2\">Naming Requirements</a> for guidelines.</p> <p>This parameter is optional; the default value is <code>null</code> (or empty in JSON).</p>",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+(,[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+)*",
                                        "type": "string"
                                    },
                                    "StreamName": {
                                        "description": "<p>A name for the stream that you are creating.</p> <p>The stream name is an identifier for the stream, and must be unique for each account and region.</p>",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9_.-]+",
                                        "type": "string"
                                    },
                                    "Tags": {
                                        "description": "A list of tags to associate with the specified stream. Each tag is a key-value pair (the value is optional).",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 50,
                                        "minItems": 1,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "StreamName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/deleteStream": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Deletes a Kinesis video stream and the data contained in the stream. </p> <p>This method marks the stream for deletion, and makes the data in the stream inaccessible immediately.</p> <p> </p> <p> To ensure that you have the latest version of the stream before deleting it, you can specify the stream version. Kinesis Video Streams assigns a version to each stream. When you update a stream, Kinesis Video Streams assigns a new version number. To get the latest stream version, use the <code>DescribeStream</code> API. </p> <p>This operation requires permission for the <code>KinesisVideo:DeleteStream</code> action.</p>",
                "operationId": "DeleteStream",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ClientLimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "NotAuthorizedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "VersionMismatchException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CurrentVersion": {
                                        "description": "<p>Optional: The version of the stream that you want to delete. </p> <p>Specify the version as a safeguard to ensure that your are deleting the correct stream. To get the stream version, use the <code>DescribeStream</code> API.</p> <p>If not specified, only the <code>CreationTime</code> is checked before deleting the stream.</p>",
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9]+",
                                        "type": "string"
                                    },
                                    "StreamARN": {
                                        "description": "The Amazon Resource Name (ARN) of the stream that you want to delete. ",
                                        "maxLength": 1024,
                                        "minLength": 1,
                                        "pattern": "arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "StreamARN"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/describeStream": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns the most current information about the specified stream. You must specify either the <code>StreamName</code> or the <code>StreamARN</code>. ",
                "operationId": "DescribeStream",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "StreamInfo": {
                                            "description": "An object that describes the stream.",
                                            "properties": {
                                                "CreationTime": {
                                                    "description": "A time stamp that indicates when the stream was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "DataRetentionInHours": {
                                                    "description": "How long the stream retains data, in hours.",
                                                    "minimum": 0,
                                                    "type": "integer"
                                                },
                                                "DeviceName": {
                                                    "description": "The name of the device that is associated with the stream.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[a-zA-Z0-9_.-]+",
                                                    "type": "string"
                                                },
                                                "KmsKeyId": {
                                                    "description": "The ID of the AWS Key Management Service (AWS KMS) key that Kinesis Video Streams uses to encrypt data on the stream.",
                                                    "maxLength": 2048,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "MediaType": {
                                                    "description": "The <code>MediaType</code> of the stream. ",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "pattern": "[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+(,[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+)*",
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "description": "The status of the stream.",
                                                    "enum": [
                                                        "CREATING",
                                                        "ACTIVE",
                                                        "UPDATING",
                                                        "DELETING"
                                                    ],
                                                    "type": "string"
                                                },
                                                "StreamARN": {
                                                    "description": "The Amazon Resource Name (ARN) of the stream.",
                                                    "maxLength": 1024,
                                                    "minLength": 1,
                                                    "pattern": "arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+",
                                                    "type": "string"
                                                },
                                                "StreamName": {
                                                    "description": "The name of the stream.",
                                                    "maxLength": 256,
                                                    "minLength": 1,
                                                    "pattern": "[a-zA-Z0-9_.-]+",
                                                    "type": "string"
                                                },
                                                "Version": {
                                                    "description": "The version of the stream.",
                                                    "maxLength": 64,
                                                    "minLength": 1,
                                                    "pattern": "[a-zA-Z0-9]+",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ClientLimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "NotAuthorizedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "StreamARN": {
                                        "description": "The Amazon Resource Name (ARN) of the stream.",
                                        "maxLength": 1024,
                                        "minLength": 1,
                                        "pattern": "arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+",
                                        "type": "string"
                                    },
                                    "StreamName": {
                                        "description": "The name of the stream.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9_.-]+",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/getDataEndpoint": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Gets an endpoint for a specified stream for either reading or writing. Use this endpoint in your application to read from the specified stream (using the <code>GetMedia</code> or <code>GetMediaForFragmentList</code> operations) or write to it (using the <code>PutMedia</code> operation). </p> <note> <p>The returned endpoint does not have the API name appended. The client needs to add the API name to the returned endpoint.</p> </note> <p>In the request, specify the stream either by <code>StreamName</code> or <code>StreamARN</code>.</p>",
                "operationId": "GetDataEndpoint",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "DataEndpoint": {
                                            "description": "The endpoint value. To read data from the stream or to write data to it, specify this endpoint in your application.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InvalidArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ClientLimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "NotAuthorizedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "APIName": {
                                        "description": "The name of the API action for which to get an endpoint.",
                                        "enum": [
                                            "PUT_MEDIA",
                                            "GET_MEDIA",
                                            "LIST_FRAGMENTS",
                                            "GET_MEDIA_FOR_FRAGMENT_LIST",
                                            "GET_HLS_STREAMING_SESSION_URL"
                                        ],
                                        "type": "string"
                                    },
                                    "StreamARN": {
                                        "description": "The Amazon Resource Name (ARN) of the stream that you want to get the endpoint for. You must specify either this parameter or a <code>StreamName</code> in the request. ",
                                        "maxLength": 1024,
                                        "minLength": 1,
                                        "pattern": "arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+",
                                        "type": "string"
                                    },
                                    "StreamName": {
                                        "description": "The name of the stream that you want to get the endpoint for. You must specify either this parameter or a <code>StreamARN</code> in the request.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9_.-]+",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "APIName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/listStreams": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns an array of <code>StreamInfo</code> objects. Each object describes a stream. To retrieve only streams that satisfy a specific condition, you can specify a <code>StreamNameCondition</code>. ",
                "operationId": "ListStreams",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "If the response is truncated, the call returns this element with a token. To get the next batch of streams, use this token in your next request. ",
                                            "maxLength": 512,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "StreamInfoList": {
                                            "description": "An array of <code>StreamInfo</code> objects.",
                                            "items": {
                                                "description": "An object describing a Kinesis video stream.",
                                                "properties": {
                                                    "CreationTime": {
                                                        "description": "A time stamp that indicates when the stream was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "DataRetentionInHours": {
                                                        "description": "How long the stream retains data, in hours.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "DeviceName": {
                                                        "description": "The name of the device that is associated with the stream.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "[a-zA-Z0-9_.-]+",
                                                        "type": "string"
                                                    },
                                                    "KmsKeyId": {
                                                        "description": "The ID of the AWS Key Management Service (AWS KMS) key that Kinesis Video Streams uses to encrypt data on the stream.",
                                                        "maxLength": 2048,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "MediaType": {
                                                        "description": "The <code>MediaType</code> of the stream. ",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "pattern": "[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+(,[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+)*",
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "description": "The status of the stream.",
                                                        "enum": [
                                                            "CREATING",
                                                            "ACTIVE",
                                                            "UPDATING",
                                                            "DELETING"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "StreamARN": {
                                                        "description": "The Amazon Resource Name (ARN) of the stream.",
                                                        "maxLength": 1024,
                                                        "minLength": 1,
                                                        "pattern": "arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+",
                                                        "type": "string"
                                                    },
                                                    "StreamName": {
                                                        "description": "The name of the stream.",
                                                        "maxLength": 256,
                                                        "minLength": 1,
                                                        "pattern": "[a-zA-Z0-9_.-]+",
                                                        "type": "string"
                                                    },
                                                    "Version": {
                                                        "description": "The version of the stream.",
                                                        "maxLength": 64,
                                                        "minLength": 1,
                                                        "pattern": "[a-zA-Z0-9]+",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ClientLimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "MaxResults": {
                                        "description": "The maximum number of streams to return in the response. The default is 10,000.",
                                        "maximum": 10000,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "NextToken": {
                                        "description": "If you specify this parameter, when the result of a <code>ListStreams</code> operation is truncated, the call returns the <code>NextToken</code> in the response. To get another batch of streams, provide this token in your next request.",
                                        "maxLength": 512,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "StreamNameCondition": {
                                        "description": "Optional: Returns only streams that satisfy a specific condition. Currently, you can specify only the prefix of a stream name as a condition. ",
                                        "properties": {
                                            "ComparisonOperator": {
                                                "description": "A comparison operator. Currently, you can specify only the <code>BEGINS_WITH</code> operator, which finds streams whose names start with a given prefix.",
                                                "enum": [
                                                    "BEGINS_WITH"
                                                ],
                                                "type": "string"
                                            },
                                            "ComparisonValue": {
                                                "description": "A value to compare.",
                                                "maxLength": 256,
                                                "minLength": 1,
                                                "pattern": "[a-zA-Z0-9_.-]+",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/listTagsForStream": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Returns a list of tags associated with the specified stream.</p> <p>In the request, you must specify either the <code>StreamName</code> or the <code>StreamARN</code>. </p>",
                "operationId": "ListTagsForStream",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "NextToken": {
                                            "description": "If you specify this parameter and the result of a <code>ListTags</code> call is truncated, the response includes a token that you can use in the next request to fetch the next set of tags.",
                                            "maxLength": 512,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "Tags": {
                                            "description": "A map of tag keys and values associated with the specified stream.",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "maxLength": 256,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "maxItems": 50,
                                            "minItems": 1,
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ClientLimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "NotAuthorizedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidResourceFormatException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "NextToken": {
                                        "description": "If you specify this parameter and the result of a <code>ListTagsForStream</code> call is truncated, the response includes a token that you can use in the next request to fetch the next batch of tags.",
                                        "maxLength": 512,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "StreamARN": {
                                        "description": "The Amazon Resource Name (ARN) of the stream that you want to list tags for.",
                                        "maxLength": 1024,
                                        "minLength": 1,
                                        "pattern": "arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+",
                                        "type": "string"
                                    },
                                    "StreamName": {
                                        "description": "The name of the stream that you want to list tags for.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9_.-]+",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/tagStream": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Adds one or more tags to a stream. A <i>tag</i> is a key-value pair (the value is optional) that you can define and assign to AWS resources. If you specify a tag that already exists, the tag value is replaced with the value that you specify in the request. For more information, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html\">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>. </p> <p>You must provide either the <code>StreamName</code> or the <code>StreamARN</code>.</p> <p>This operation requires permission for the <code>KinesisVideo:TagStream</code> action.</p> <p>Kinesis video streams support up to 50 tags.</p>",
                "operationId": "TagStream",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ClientLimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "NotAuthorizedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidResourceFormatException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "TagsPerResourceExceededLimitException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "StreamARN": {
                                        "description": "The Amazon Resource Name (ARN) of the resource that you want to add the tag or tags to.",
                                        "maxLength": 1024,
                                        "minLength": 1,
                                        "pattern": "arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+",
                                        "type": "string"
                                    },
                                    "StreamName": {
                                        "description": "The name of the stream that you want to add the tag or tags to.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9_.-]+",
                                        "type": "string"
                                    },
                                    "Tags": {
                                        "description": "A list of tags to associate with the specified stream. Each tag is a key-value pair (the value is optional).",
                                        "items": {
                                            "properties": {
                                                "key": {
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 50,
                                        "minItems": 1,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Tags"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/untagStream": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Removes one or more tags from a stream. In the request, specify only a tag key or keys; don't specify the value. If you specify a tag key that does not exist, it's ignored.</p> <p>In the request, you must provide the <code>StreamName</code> or <code>StreamARN</code>.</p>",
                "operationId": "UntagStream",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ClientLimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "NotAuthorizedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InvalidResourceFormatException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "StreamARN": {
                                        "description": "The Amazon Resource Name (ARN) of the stream that you want to remove tags from.",
                                        "maxLength": 1024,
                                        "minLength": 1,
                                        "pattern": "arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+",
                                        "type": "string"
                                    },
                                    "StreamName": {
                                        "description": "The name of the stream that you want to remove tags from.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9_.-]+",
                                        "type": "string"
                                    },
                                    "TagKeyList": {
                                        "description": "A list of the keys of the tags that you want to remove.",
                                        "items": {
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "maxItems": 50,
                                        "minItems": 1,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "TagKeyList"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/updateDataRetention": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p> Increases or decreases the stream's data retention period by the value that you specify. To indicate whether you want to increase or decrease the data retention period, specify the <code>Operation</code> parameter in the request body. In the request, you must specify either the <code>StreamName</code> or the <code>StreamARN</code>. </p> <note> <p>The retention period that you specify replaces the current value.</p> </note> <p>This operation requires permission for the <code>KinesisVideo:UpdateDataRetention</code> action.</p> <p>Changing the data retention period affects the data in the stream as follows:</p> <ul> <li> <p>If the data retention period is increased, existing data is retained for the new retention period. For example, if the data retention period is increased from one hour to seven hours, all existing data is retained for seven hours.</p> </li> <li> <p>If the data retention period is decreased, existing data is retained for the new retention period. For example, if the data retention period is decreased from seven hours to one hour, all existing data is retained for one hour, and any data older than one hour is deleted immediately.</p> </li> </ul>",
                "operationId": "UpdateDataRetention",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ClientLimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ResourceInUseException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "NotAuthorizedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "VersionMismatchException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CurrentVersion": {
                                        "description": "The version of the stream whose retention period you want to change. To get the version, call either the <code>DescribeStream</code> or the <code>ListStreams</code> API.",
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9]+",
                                        "type": "string"
                                    },
                                    "DataRetentionChangeInHours": {
                                        "description": "The retention period, in hours. The value you specify replaces the current value. The maximum value for this parameter is 87600 (ten years).",
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "Operation": {
                                        "description": "Indicates whether you want to increase or decrease the retention period.",
                                        "enum": [
                                            "INCREASE_DATA_RETENTION",
                                            "DECREASE_DATA_RETENTION"
                                        ],
                                        "type": "string"
                                    },
                                    "StreamARN": {
                                        "description": "The Amazon Resource Name (ARN) of the stream whose retention period you want to change.",
                                        "maxLength": 1024,
                                        "minLength": 1,
                                        "pattern": "arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+",
                                        "type": "string"
                                    },
                                    "StreamName": {
                                        "description": "The name of the stream whose retention period you want to change.",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9_.-]+",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "CurrentVersion",
                                    "Operation",
                                    "DataRetentionChangeInHours"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/updateStream": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Updates stream metadata, such as the device name and media type.</p> <p>You must provide the stream name or the Amazon Resource Name (ARN) of the stream.</p> <p>To make sure that you have the latest version of the stream before updating it, you can specify the stream version. Kinesis Video Streams assigns a version to each stream. When you update a stream, Kinesis Video Streams assigns a new version number. To get the latest stream version, use the <code>DescribeStream</code> API. </p> <p> <code>UpdateStream</code> is an asynchronous operation, and takes time to complete.</p>",
                "operationId": "UpdateStream",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ClientLimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InvalidArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ResourceNotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ResourceInUseException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "NotAuthorizedException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "VersionMismatchException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "CurrentVersion": {
                                        "description": "The version of the stream whose metadata you want to update.",
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9]+",
                                        "type": "string"
                                    },
                                    "DeviceName": {
                                        "description": "<p>The name of the device that is writing to the stream. </p> <note> <p> In the current implementation, Kinesis Video Streams does not use this name. </p> </note>",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9_.-]+",
                                        "type": "string"
                                    },
                                    "MediaType": {
                                        "description": "<p>The stream's media type. Use <code>MediaType</code> to specify the type of content that the stream contains to the consumers of the stream. For more information about media types, see <a href=\"http://www.iana.org/assignments/media-types/media-types.xhtml\">Media Types</a>. If you choose to specify the <code>MediaType</code>, see <a href=\"https://tools.ietf.org/html/rfc6838#section-4.2\">Naming Requirements</a>.</p> <p>To play video on the console, you must specify the correct video type. For example, if the video in the stream is H.264, specify <code>video/h264</code> as the <code>MediaType</code>.</p>",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "pattern": "[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+(,[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+)*",
                                        "type": "string"
                                    },
                                    "StreamARN": {
                                        "description": "The ARN of the stream whose metadata you want to update.",
                                        "maxLength": 1024,
                                        "minLength": 1,
                                        "pattern": "arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+",
                                        "type": "string"
                                    },
                                    "StreamName": {
                                        "description": "<p>The name of the stream whose metadata you want to update.</p> <p>The stream name is an identifier for the stream, and must be unique for each account and region.</p>",
                                        "maxLength": 256,
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9_.-]+",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "CurrentVersion"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        }
    },
    "components": {
        "schemas": {
            "APIName": {
                "enum": [
                    "PUT_MEDIA",
                    "GET_MEDIA",
                    "LIST_FRAGMENTS",
                    "GET_MEDIA_FOR_FRAGMENT_LIST",
                    "GET_HLS_STREAMING_SESSION_URL"
                ],
                "type": "string"
            },
            "AccountStreamLimitExceededException": {},
            "ClientLimitExceededException": {},
            "ComparisonOperator": {
                "enum": [
                    "BEGINS_WITH"
                ],
                "type": "string"
            },
            "CreateStreamInput": {
                "properties": {
                    "DataRetentionInHours": {
                        "description": "<p>The number of hours that you want to retain the data in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream.</p> <p>The default value is 0, indicating that the stream does not persist data.</p> <p>When the <code>DataRetentionInHours</code> value is 0, consumers can still consume the fragments that remain in the service host buffer, which has a retention time limit of 5 minutes and a retention memory limit of 200 MB. Fragments are removed from the buffer when either limit is reached.</p>",
                        "minimum": 0,
                        "type": "integer"
                    },
                    "DeviceName": {
                        "description": "<p>The name of the device that is writing to the stream. </p> <note> <p>In the current implementation, Kinesis Video Streams does not use this name.</p> </note>",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[a-zA-Z0-9_.-]+",
                        "type": "string"
                    },
                    "KmsKeyId": {
                        "description": "<p>The ID of the AWS Key Management Service (AWS KMS) key that you want Kinesis Video Streams to use to encrypt stream data.</p> <p>If no key ID is specified, the default, Kinesis Video-managed key (<code>aws/kinesisvideo</code>) is used.</p> <p> For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters\">DescribeKey</a>. </p>",
                        "maxLength": 2048,
                        "minLength": 1,
                        "type": "string"
                    },
                    "MediaType": {
                        "description": "<p>The media type of the stream. Consumers of the stream can use this information when processing the stream. For more information about media types, see <a href=\"http://www.iana.org/assignments/media-types/media-types.xhtml\">Media Types</a>. If you choose to specify the <code>MediaType</code>, see <a href=\"https://tools.ietf.org/html/rfc6838#section-4.2\">Naming Requirements</a> for guidelines.</p> <p>This parameter is optional; the default value is <code>null</code> (or empty in JSON).</p>",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+(,[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+)*",
                        "type": "string"
                    },
                    "StreamName": {
                        "description": "<p>A name for the stream that you are creating.</p> <p>The stream name is an identifier for the stream, and must be unique for each account and region.</p>",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[a-zA-Z0-9_.-]+",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "A list of tags to associate with the specified stream. Each tag is a key-value pair (the value is optional).",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 50,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "required": [
                    "StreamName"
                ],
                "type": "object"
            },
            "CreateStreamOutput": {
                "properties": {
                    "StreamARN": {
                        "description": "The Amazon Resource Name (ARN) of the stream.",
                        "maxLength": 1024,
                        "minLength": 1,
                        "pattern": "arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DataEndpoint": {
                "type": "string"
            },
            "DataRetentionChangeInHours": {
                "minimum": 1,
                "type": "integer"
            },
            "DataRetentionInHours": {
                "minimum": 0,
                "type": "integer"
            },
            "DeleteStreamInput": {
                "properties": {
                    "CurrentVersion": {
                        "description": "<p>Optional: The version of the stream that you want to delete. </p> <p>Specify the version as a safeguard to ensure that your are deleting the correct stream. To get the stream version, use the <code>DescribeStream</code> API.</p> <p>If not specified, only the <code>CreationTime</code> is checked before deleting the stream.</p>",
                        "maxLength": 64,
                        "minLength": 1,
                        "pattern": "[a-zA-Z0-9]+",
                        "type": "string"
                    },
                    "StreamARN": {
                        "description": "The Amazon Resource Name (ARN) of the stream that you want to delete. ",
                        "maxLength": 1024,
                        "minLength": 1,
                        "pattern": "arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+",
                        "type": "string"
                    }
                },
                "required": [
                    "StreamARN"
                ],
                "type": "object"
            },
            "DeleteStreamOutput": {
                "properties": {},
                "type": "object"
            },
            "DescribeStreamInput": {
                "properties": {
                    "StreamARN": {
                        "description": "The Amazon Resource Name (ARN) of the stream.",
                        "maxLength": 1024,
                        "minLength": 1,
                        "pattern": "arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+",
                        "type": "string"
                    },
                    "StreamName": {
                        "description": "The name of the stream.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[a-zA-Z0-9_.-]+",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeStreamOutput": {
                "properties": {
                    "StreamInfo": {
                        "description": "An object that describes the stream.",
                        "properties": {
                            "CreationTime": {
                                "description": "A time stamp that indicates when the stream was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "DataRetentionInHours": {
                                "description": "How long the stream retains data, in hours.",
                                "minimum": 0,
                                "type": "integer"
                            },
                            "DeviceName": {
                                "description": "The name of the device that is associated with the stream.",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[a-zA-Z0-9_.-]+",
                                "type": "string"
                            },
                            "KmsKeyId": {
                                "description": "The ID of the AWS Key Management Service (AWS KMS) key that Kinesis Video Streams uses to encrypt data on the stream.",
                                "maxLength": 2048,
                                "minLength": 1,
                                "type": "string"
                            },
                            "MediaType": {
                                "description": "The <code>MediaType</code> of the stream. ",
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+(,[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+)*",
                                "type": "string"
                            },
                            "Status": {
                                "description": "The status of the stream.",
                                "enum": [
                                    "CREATING",
                                    "ACTIVE",
                                    "UPDATING",
                                    "DELETING"
                                ],
                                "type": "string"
                            },
                            "StreamARN": {
                                "description": "The Amazon Resource Name (ARN) of the stream.",
                                "maxLength": 1024,
                                "minLength": 1,
                                "pattern": "arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+",
                                "type": "string"
                            },
                            "StreamName": {
                                "description": "The name of the stream.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[a-zA-Z0-9_.-]+",
                                "type": "string"
                            },
                            "Version": {
                                "description": "The version of the stream.",
                                "maxLength": 64,
                                "minLength": 1,
                                "pattern": "[a-zA-Z0-9]+",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DeviceName": {
                "maxLength": 128,
                "minLength": 1,
                "pattern": "[a-zA-Z0-9_.-]+",
                "type": "string"
            },
            "DeviceStreamLimitExceededException": {},
            "GetDataEndpointInput": {
                "properties": {
                    "APIName": {
                        "description": "The name of the API action for which to get an endpoint.",
                        "enum": [
                            "PUT_MEDIA",
                            "GET_MEDIA",
                            "LIST_FRAGMENTS",
                            "GET_MEDIA_FOR_FRAGMENT_LIST",
                            "GET_HLS_STREAMING_SESSION_URL"
                        ],
                        "type": "string"
                    },
                    "StreamARN": {
                        "description": "The Amazon Resource Name (ARN) of the stream that you want to get the endpoint for. You must specify either this parameter or a <code>StreamName</code> in the request. ",
                        "maxLength": 1024,
                        "minLength": 1,
                        "pattern": "arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+",
                        "type": "string"
                    },
                    "StreamName": {
                        "description": "The name of the stream that you want to get the endpoint for. You must specify either this parameter or a <code>StreamARN</code> in the request.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[a-zA-Z0-9_.-]+",
                        "type": "string"
                    }
                },
                "required": [
                    "APIName"
                ],
                "type": "object"
            },
            "GetDataEndpointOutput": {
                "properties": {
                    "DataEndpoint": {
                        "description": "The endpoint value. To read data from the stream or to write data to it, specify this endpoint in your application.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InvalidArgumentException": {},
            "InvalidDeviceException": {},
            "InvalidResourceFormatException": {},
            "KmsKeyId": {
                "maxLength": 2048,
                "minLength": 1,
                "type": "string"
            },
            "ListStreamsInput": {
                "properties": {
                    "MaxResults": {
                        "description": "The maximum number of streams to return in the response. The default is 10,000.",
                        "maximum": 10000,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "NextToken": {
                        "description": "If you specify this parameter, when the result of a <code>ListStreams</code> operation is truncated, the call returns the <code>NextToken</code> in the response. To get another batch of streams, provide this token in your next request.",
                        "maxLength": 512,
                        "minLength": 0,
                        "type": "string"
                    },
                    "StreamNameCondition": {
                        "description": "Optional: Returns only streams that satisfy a specific condition. Currently, you can specify only the prefix of a stream name as a condition. ",
                        "properties": {
                            "ComparisonOperator": {
                                "description": "A comparison operator. Currently, you can specify only the <code>BEGINS_WITH</code> operator, which finds streams whose names start with a given prefix.",
                                "enum": [
                                    "BEGINS_WITH"
                                ],
                                "type": "string"
                            },
                            "ComparisonValue": {
                                "description": "A value to compare.",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "[a-zA-Z0-9_.-]+",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ListStreamsInputLimit": {
                "maximum": 10000,
                "minimum": 1,
                "type": "integer"
            },
            "ListStreamsOutput": {
                "properties": {
                    "NextToken": {
                        "description": "If the response is truncated, the call returns this element with a token. To get the next batch of streams, use this token in your next request. ",
                        "maxLength": 512,
                        "minLength": 0,
                        "type": "string"
                    },
                    "StreamInfoList": {
                        "description": "An array of <code>StreamInfo</code> objects.",
                        "items": {
                            "description": "An object describing a Kinesis video stream.",
                            "properties": {
                                "CreationTime": {
                                    "description": "A time stamp that indicates when the stream was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "DataRetentionInHours": {
                                    "description": "How long the stream retains data, in hours.",
                                    "minimum": 0,
                                    "type": "integer"
                                },
                                "DeviceName": {
                                    "description": "The name of the device that is associated with the stream.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[a-zA-Z0-9_.-]+",
                                    "type": "string"
                                },
                                "KmsKeyId": {
                                    "description": "The ID of the AWS Key Management Service (AWS KMS) key that Kinesis Video Streams uses to encrypt data on the stream.",
                                    "maxLength": 2048,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "MediaType": {
                                    "description": "The <code>MediaType</code> of the stream. ",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "pattern": "[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+(,[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+)*",
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "The status of the stream.",
                                    "enum": [
                                        "CREATING",
                                        "ACTIVE",
                                        "UPDATING",
                                        "DELETING"
                                    ],
                                    "type": "string"
                                },
                                "StreamARN": {
                                    "description": "The Amazon Resource Name (ARN) of the stream.",
                                    "maxLength": 1024,
                                    "minLength": 1,
                                    "pattern": "arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+",
                                    "type": "string"
                                },
                                "StreamName": {
                                    "description": "The name of the stream.",
                                    "maxLength": 256,
                                    "minLength": 1,
                                    "pattern": "[a-zA-Z0-9_.-]+",
                                    "type": "string"
                                },
                                "Version": {
                                    "description": "The version of the stream.",
                                    "maxLength": 64,
                                    "minLength": 1,
                                    "pattern": "[a-zA-Z0-9]+",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ListTagsForStreamInput": {
                "properties": {
                    "NextToken": {
                        "description": "If you specify this parameter and the result of a <code>ListTagsForStream</code> call is truncated, the response includes a token that you can use in the next request to fetch the next batch of tags.",
                        "maxLength": 512,
                        "minLength": 0,
                        "type": "string"
                    },
                    "StreamARN": {
                        "description": "The Amazon Resource Name (ARN) of the stream that you want to list tags for.",
                        "maxLength": 1024,
                        "minLength": 1,
                        "pattern": "arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+",
                        "type": "string"
                    },
                    "StreamName": {
                        "description": "The name of the stream that you want to list tags for.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[a-zA-Z0-9_.-]+",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListTagsForStreamOutput": {
                "properties": {
                    "NextToken": {
                        "description": "If you specify this parameter and the result of a <code>ListTags</code> call is truncated, the response includes a token that you can use in the next request to fetch the next set of tags.",
                        "maxLength": 512,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Tags": {
                        "description": "A map of tag keys and values associated with the specified stream.",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 50,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "MediaType": {
                "maxLength": 128,
                "minLength": 1,
                "pattern": "[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+(,[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+)*",
                "type": "string"
            },
            "NextToken": {
                "maxLength": 512,
                "minLength": 0,
                "type": "string"
            },
            "NotAuthorizedException": {},
            "ResourceARN": {
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+",
                "type": "string"
            },
            "ResourceInUseException": {},
            "ResourceNotFoundException": {},
            "ResourceTags": {
                "items": {
                    "properties": {
                        "key": {
                            "maxLength": 128,
                            "minLength": 1,
                            "type": "string"
                        },
                        "value": {
                            "maxLength": 256,
                            "minLength": 0,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "maxItems": 50,
                "minItems": 1,
                "type": "array"
            },
            "Status": {
                "enum": [
                    "CREATING",
                    "ACTIVE",
                    "UPDATING",
                    "DELETING"
                ],
                "type": "string"
            },
            "StreamInfo": {
                "description": "An object describing a Kinesis video stream.",
                "properties": {
                    "CreationTime": {
                        "description": "A time stamp that indicates when the stream was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "DataRetentionInHours": {
                        "description": "How long the stream retains data, in hours.",
                        "minimum": 0,
                        "type": "integer"
                    },
                    "DeviceName": {
                        "description": "The name of the device that is associated with the stream.",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[a-zA-Z0-9_.-]+",
                        "type": "string"
                    },
                    "KmsKeyId": {
                        "description": "The ID of the AWS Key Management Service (AWS KMS) key that Kinesis Video Streams uses to encrypt data on the stream.",
                        "maxLength": 2048,
                        "minLength": 1,
                        "type": "string"
                    },
                    "MediaType": {
                        "description": "The <code>MediaType</code> of the stream. ",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+(,[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+)*",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the stream.",
                        "enum": [
                            "CREATING",
                            "ACTIVE",
                            "UPDATING",
                            "DELETING"
                        ],
                        "type": "string"
                    },
                    "StreamARN": {
                        "description": "The Amazon Resource Name (ARN) of the stream.",
                        "maxLength": 1024,
                        "minLength": 1,
                        "pattern": "arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+",
                        "type": "string"
                    },
                    "StreamName": {
                        "description": "The name of the stream.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[a-zA-Z0-9_.-]+",
                        "type": "string"
                    },
                    "Version": {
                        "description": "The version of the stream.",
                        "maxLength": 64,
                        "minLength": 1,
                        "pattern": "[a-zA-Z0-9]+",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StreamInfoList": {
                "items": {
                    "description": "An object describing a Kinesis video stream.",
                    "properties": {
                        "CreationTime": {
                            "description": "A time stamp that indicates when the stream was created.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "DataRetentionInHours": {
                            "description": "How long the stream retains data, in hours.",
                            "minimum": 0,
                            "type": "integer"
                        },
                        "DeviceName": {
                            "description": "The name of the device that is associated with the stream.",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "[a-zA-Z0-9_.-]+",
                            "type": "string"
                        },
                        "KmsKeyId": {
                            "description": "The ID of the AWS Key Management Service (AWS KMS) key that Kinesis Video Streams uses to encrypt data on the stream.",
                            "maxLength": 2048,
                            "minLength": 1,
                            "type": "string"
                        },
                        "MediaType": {
                            "description": "The <code>MediaType</code> of the stream. ",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+(,[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+)*",
                            "type": "string"
                        },
                        "Status": {
                            "description": "The status of the stream.",
                            "enum": [
                                "CREATING",
                                "ACTIVE",
                                "UPDATING",
                                "DELETING"
                            ],
                            "type": "string"
                        },
                        "StreamARN": {
                            "description": "The Amazon Resource Name (ARN) of the stream.",
                            "maxLength": 1024,
                            "minLength": 1,
                            "pattern": "arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+",
                            "type": "string"
                        },
                        "StreamName": {
                            "description": "The name of the stream.",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "[a-zA-Z0-9_.-]+",
                            "type": "string"
                        },
                        "Version": {
                            "description": "The version of the stream.",
                            "maxLength": 64,
                            "minLength": 1,
                            "pattern": "[a-zA-Z0-9]+",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "StreamName": {
                "maxLength": 256,
                "minLength": 1,
                "pattern": "[a-zA-Z0-9_.-]+",
                "type": "string"
            },
            "StreamNameCondition": {
                "description": "Specifies the condition that streams must satisfy to be returned when you list streams (see the <code>ListStreams</code> API). A condition has a comparison operation and a value. Currently, you can specify only the <code>BEGINS_WITH</code> operator, which finds streams whose names start with a given prefix. ",
                "properties": {
                    "ComparisonOperator": {
                        "description": "A comparison operator. Currently, you can specify only the <code>BEGINS_WITH</code> operator, which finds streams whose names start with a given prefix.",
                        "enum": [
                            "BEGINS_WITH"
                        ],
                        "type": "string"
                    },
                    "ComparisonValue": {
                        "description": "A value to compare.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[a-zA-Z0-9_.-]+",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TagKey": {
                "maxLength": 128,
                "minLength": 1,
                "type": "string"
            },
            "TagKeyList": {
                "items": {
                    "maxLength": 128,
                    "minLength": 1,
                    "type": "string"
                },
                "maxItems": 50,
                "minItems": 1,
                "type": "array"
            },
            "TagStreamInput": {
                "properties": {
                    "StreamARN": {
                        "description": "The Amazon Resource Name (ARN) of the resource that you want to add the tag or tags to.",
                        "maxLength": 1024,
                        "minLength": 1,
                        "pattern": "arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+",
                        "type": "string"
                    },
                    "StreamName": {
                        "description": "The name of the stream that you want to add the tag or tags to.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[a-zA-Z0-9_.-]+",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "A list of tags to associate with the specified stream. Each tag is a key-value pair (the value is optional).",
                        "items": {
                            "properties": {
                                "key": {
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "value": {
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "maxItems": 50,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "required": [
                    "Tags"
                ],
                "type": "object"
            },
            "TagStreamOutput": {
                "properties": {},
                "type": "object"
            },
            "TagValue": {
                "maxLength": 256,
                "minLength": 0,
                "type": "string"
            },
            "TagsPerResourceExceededLimitException": {},
            "Timestamp": {
                "format": "date-time",
                "type": "string"
            },
            "UntagStreamInput": {
                "properties": {
                    "StreamARN": {
                        "description": "The Amazon Resource Name (ARN) of the stream that you want to remove tags from.",
                        "maxLength": 1024,
                        "minLength": 1,
                        "pattern": "arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+",
                        "type": "string"
                    },
                    "StreamName": {
                        "description": "The name of the stream that you want to remove tags from.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[a-zA-Z0-9_.-]+",
                        "type": "string"
                    },
                    "TagKeyList": {
                        "description": "A list of the keys of the tags that you want to remove.",
                        "items": {
                            "maxLength": 128,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 50,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "required": [
                    "TagKeyList"
                ],
                "type": "object"
            },
            "UntagStreamOutput": {
                "properties": {},
                "type": "object"
            },
            "UpdateDataRetentionInput": {
                "properties": {
                    "CurrentVersion": {
                        "description": "The version of the stream whose retention period you want to change. To get the version, call either the <code>DescribeStream</code> or the <code>ListStreams</code> API.",
                        "maxLength": 64,
                        "minLength": 1,
                        "pattern": "[a-zA-Z0-9]+",
                        "type": "string"
                    },
                    "DataRetentionChangeInHours": {
                        "description": "The retention period, in hours. The value you specify replaces the current value. The maximum value for this parameter is 87600 (ten years).",
                        "minimum": 1,
                        "type": "integer"
                    },
                    "Operation": {
                        "description": "Indicates whether you want to increase or decrease the retention period.",
                        "enum": [
                            "INCREASE_DATA_RETENTION",
                            "DECREASE_DATA_RETENTION"
                        ],
                        "type": "string"
                    },
                    "StreamARN": {
                        "description": "The Amazon Resource Name (ARN) of the stream whose retention period you want to change.",
                        "maxLength": 1024,
                        "minLength": 1,
                        "pattern": "arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+",
                        "type": "string"
                    },
                    "StreamName": {
                        "description": "The name of the stream whose retention period you want to change.",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[a-zA-Z0-9_.-]+",
                        "type": "string"
                    }
                },
                "required": [
                    "CurrentVersion",
                    "Operation",
                    "DataRetentionChangeInHours"
                ],
                "type": "object"
            },
            "UpdateDataRetentionOperation": {
                "enum": [
                    "INCREASE_DATA_RETENTION",
                    "DECREASE_DATA_RETENTION"
                ],
                "type": "string"
            },
            "UpdateDataRetentionOutput": {
                "properties": {},
                "type": "object"
            },
            "UpdateStreamInput": {
                "properties": {
                    "CurrentVersion": {
                        "description": "The version of the stream whose metadata you want to update.",
                        "maxLength": 64,
                        "minLength": 1,
                        "pattern": "[a-zA-Z0-9]+",
                        "type": "string"
                    },
                    "DeviceName": {
                        "description": "<p>The name of the device that is writing to the stream. </p> <note> <p> In the current implementation, Kinesis Video Streams does not use this name. </p> </note>",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[a-zA-Z0-9_.-]+",
                        "type": "string"
                    },
                    "MediaType": {
                        "description": "<p>The stream's media type. Use <code>MediaType</code> to specify the type of content that the stream contains to the consumers of the stream. For more information about media types, see <a href=\"http://www.iana.org/assignments/media-types/media-types.xhtml\">Media Types</a>. If you choose to specify the <code>MediaType</code>, see <a href=\"https://tools.ietf.org/html/rfc6838#section-4.2\">Naming Requirements</a>.</p> <p>To play video on the console, you must specify the correct video type. For example, if the video in the stream is H.264, specify <code>video/h264</code> as the <code>MediaType</code>.</p>",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+(,[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+)*",
                        "type": "string"
                    },
                    "StreamARN": {
                        "description": "The ARN of the stream whose metadata you want to update.",
                        "maxLength": 1024,
                        "minLength": 1,
                        "pattern": "arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+",
                        "type": "string"
                    },
                    "StreamName": {
                        "description": "<p>The name of the stream whose metadata you want to update.</p> <p>The stream name is an identifier for the stream, and must be unique for each account and region.</p>",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "[a-zA-Z0-9_.-]+",
                        "type": "string"
                    }
                },
                "required": [
                    "CurrentVersion"
                ],
                "type": "object"
            },
            "UpdateStreamOutput": {
                "properties": {},
                "type": "object"
            },
            "Version": {
                "maxLength": 64,
                "minLength": 1,
                "pattern": "[a-zA-Z0-9]+",
                "type": "string"
            },
            "VersionMismatchException": {}
        },
        "parameters": {
            "Action": {
                "in": "query",
                "name": "Action",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "Version": {
                "in": "query",
                "name": "Version",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Algorithm": {
                "in": "header",
                "name": "X-Amz-Algorithm",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Content-Sha256": {
                "in": "header",
                "name": "X-Amz-Content-Sha256",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Credential": {
                "in": "header",
                "name": "X-Amz-Credential",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Date": {
                "in": "header",
                "name": "X-Amz-Date",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Security-Token": {
                "in": "header",
                "name": "X-Amz-Security-Token",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Signature": {
                "in": "header",
                "name": "X-Amz-Signature",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-SignedHeaders": {
                "in": "header",
                "name": "X-Amz-SignedHeaders",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "securitySchemes": {
            "hmac": {
                "description": "Amazon Signature authorization v4",
                "in": "header",
                "name": "Authorization",
                "type": "apiKey",
                "x-amazon-apigateway-authtype": "awsSigv4"
            }
        }
    }
}